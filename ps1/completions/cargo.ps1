using namespace System.Management.Automation
using namespace System.Management.Automation.Language

Register-ArgumentCompleter -Native -CommandName cargo -ScriptBlock {
  param([string]$wordToComplete, [CommandAst]$commandAst, [int]$cursorPosition)
  $cursorPosition -= $wordToComplete.Length
  $subcmd = @(foreach ($key in $commandAst.CommandElements) {
      if ($key.Extent.StartOffset -eq $cursorPosition) {
        break
      }
      $key = $key.ToString()
      if ($key -ne 'cargo' -and $key[0] -ne '-') {
        $key
      }
      $prev = $key
    }) -join '_'

  @(switch ($subcmd) {
      'clean' {
        [CompletionResult]::new('--doc', 'doc', [CompletionResultType]::ParameterValue, 'Whether or not to clean just the documentation directory')
        [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterValue, 'Display what would be deleted without deleting anything')
        [CompletionResult]::new('--dry-run', 'dry-run', [CompletionResultType]::ParameterValue, 'Display what would be deleted without deleting anything')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to clean artifacts for')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to clean artifacts for')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Whether or not to clean release artifacts')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Whether or not to clean release artifacts')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Clean artifacts of the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Target triple to clean output for')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'add' {
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, 'Disable the default features')
        [CompletionResult]::new('--default-features', 'default-features', [CompletionResultType]::ParameterValue, 'Re-enable the default features')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--optional', 'optional', [CompletionResultType]::ParameterValue, 'Mark the dependency as optional')
        [CompletionResult]::new('--no-optional', 'no-optional', [CompletionResultType]::ParameterValue, 'Mark the dependency as required')
        [CompletionResult]::new('--public', 'public', [CompletionResultType]::ParameterValue, 'Mark the dependency as public (unstable)')
        [CompletionResult]::new('--no-public', 'no-public', [CompletionResultType]::ParameterValue, 'Mark the dependency as private (unstable)')
        [CompletionResult]::new('--rename', 'rename', [CompletionResultType]::ParameterValue, 'Rename the dependency')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages (unstable)")
        [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterValue, "Don't actually write the manifest")
        [CompletionResult]::new('--dry-run', 'dry-run', [CompletionResultType]::ParameterValue, "Don't actually write the manifest")
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, "Print help (see a summary with '-h')")
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, "Print help (see a summary with '-h')")
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to modify')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to modify')
        [CompletionResult]::new('--path', 'path', [CompletionResultType]::ParameterValue, 'Filesystem path to local crate to add')
        [CompletionResult]::new('--git', 'git', [CompletionResultType]::ParameterValue, 'Git repository location')
        [CompletionResult]::new('--branch', 'branch', [CompletionResultType]::ParameterValue, 'Git branch to download the crate from')
        [CompletionResult]::new('--tag', 'tag', [CompletionResultType]::ParameterValue, 'Git tag to download the crate from')
        [CompletionResult]::new('--rev', 'rev', [CompletionResultType]::ParameterValue, 'Git reference to download the crate from')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Package registry for this dependency')
        [CompletionResult]::new('--dev', 'dev', [CompletionResultType]::ParameterValue, 'Add as development dependency')
        [CompletionResult]::new('--build', 'build', [CompletionResultType]::ParameterValue, 'Add as build dependency')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Add as dependency to the given target platform')
      }
      'bench' {
        [CompletionResult]::new('--no-run', 'no-run', [CompletionResultType]::ParameterValue, "Compile, but don't run benchmarks")
        [CompletionResult]::new('--no-fail-fast', 'no-fail-fast', [CompletionResultType]::ParameterValue, 'Run all benchmarks regardless of failure')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to run benchmarks for')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to run benchmarks for')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Benchmark all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, 'Exclude packages from the benchmark')
        [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterValue, 'Alias for --workspace (deprecated)')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Benchmark only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Benchmark all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Benchmark only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Benchmark all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Benchmark only the specified example')
        [CompletionResult]::new('--tests', 'tests', [CompletionResultType]::ParameterValue, 'Benchmark all test targets')
        [CompletionResult]::new('--test', 'test', [CompletionResultType]::ParameterValue, 'Benchmark only the specified test target')
        [CompletionResult]::new('--benches', 'benches', [CompletionResultType]::ParameterValue, 'Benchmark all bench targets')
        [CompletionResult]::new('--bench', 'bench', [CompletionResultType]::ParameterValue, 'Benchmark only the specified bench target')
        [CompletionResult]::new('--all-targets', 'all-targets', [CompletionResultType]::ParameterValue, 'Benchmark all targets')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      { $_ -eq 'b' -or $_ -eq 'build' } {
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--future-incompat-report', 'future-incompat-report', [CompletionResultType]::ParameterValue, 'Outputs a future incompatibility report at the end of the build')
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, "Package to build (see `cargo help pkgid`)")
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, "Package to build (see `cargo help pkgid`)")
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Build all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, 'Exclude packages from the build')
        [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterValue, 'Alias for --workspace (deprecated)')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Build only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Build all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Build only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Build all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Build only the specified example')
        [CompletionResult]::new('--tests', 'tests', [CompletionResultType]::ParameterValue, 'Build all test targets')
        [CompletionResult]::new('--test', 'test', [CompletionResultType]::ParameterValue, 'Build only the specified test target')
        [CompletionResult]::new('--benches', 'benches', [CompletionResultType]::ParameterValue, 'Build all bench targets')
        [CompletionResult]::new('--bench', 'bench', [CompletionResultType]::ParameterValue, 'Build only the specified bench target')
        [CompletionResult]::new('--all-targets', 'all-targets', [CompletionResultType]::ParameterValue, 'Build all targets')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--out-dir', 'out-dir', [CompletionResultType]::ParameterValue, 'Copy final artifacts to this directory (unstable)')
        [CompletionResult]::new('--build-plan', 'build-plan', [CompletionResultType]::ParameterValue, 'Output the build plan in JSON (unstable)')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      { $_ -eq 'c' -or $_ -eq 'check' } {
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--future-incompat-report', 'future-incompat-report', [CompletionResultType]::ParameterValue, 'Outputs a future incompatibility report at the end of the build')
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package(s) to check')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package(s) to check')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Check all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, 'Exclude packages from the check')
        [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterValue, 'Alias for --workspace (deprecated)')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Check only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Check all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Check only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Check all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Check only the specified example')
        [CompletionResult]::new('--tests', 'tests', [CompletionResultType]::ParameterValue, 'Check all test targets')
        [CompletionResult]::new('--test', 'test', [CompletionResultType]::ParameterValue, 'Check only the specified test target')
        [CompletionResult]::new('--benches', 'benches', [CompletionResultType]::ParameterValue, 'Check all bench targets')
        [CompletionResult]::new('--bench', 'bench', [CompletionResultType]::ParameterValue, 'Check only the specified bench target')
        [CompletionResult]::new('--all-targets', 'all-targets', [CompletionResultType]::ParameterValue, 'Check all targets')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Check artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Check artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Check artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Check for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'clippy' {
        [CompletionResult]::new('--no-deps', 'no-deps', [CompletionResultType]::ParameterValue, 'Run Clippy only on the given crate, without linting the dependencies')
        [CompletionResult]::new('--fix', 'fix', [CompletionResultType]::ParameterValue, 'Automatically apply lint suggestions. This flag implies --no-deps and --all-targets')
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print this message')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print this message')
        [CompletionResult]::new('-V', 'V', [CompletionResultType]::ParameterValue, 'Print version info and exit')
        [CompletionResult]::new('--version', 'version', [CompletionResultType]::ParameterValue, 'Print version info and exit')
        [CompletionResult]::new('--explain', 'explain', [CompletionResultType]::ParameterValue, 'Print the documentation for a given lint')
        [CompletionResult]::new('-W', 'W', [CompletionResultType]::ParameterValue, 'Set lint warnings')
        [CompletionResult]::new('--warn', 'warn', [CompletionResultType]::ParameterValue, 'Set lint warnings')
        [CompletionResult]::new('-A', 'A', [CompletionResultType]::ParameterValue, 'Set lint allowed')
        [CompletionResult]::new('--allow', 'allow', [CompletionResultType]::ParameterValue, 'Set lint allowed')
        [CompletionResult]::new('-D', 'D', [CompletionResultType]::ParameterValue, 'Set lint denied')
        [CompletionResult]::new('--deny', 'deny', [CompletionResultType]::ParameterValue, 'Set lint denied')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Set lint forbidden')
        [CompletionResult]::new('--forbid', 'forbid', [CompletionResultType]::ParameterValue, 'Set lint forbidden')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'config' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      { $_ -eq 'd' -or $_ -eq 'doc' } {
        [CompletionResult]::new('--open', 'open', [CompletionResultType]::ParameterValue, 'Opens the docs in a browser after the operation')
        [CompletionResult]::new('--no-deps', 'no-deps', [CompletionResultType]::ParameterValue, "Don't build documentation for dependencies")
        [CompletionResult]::new('--document-private-items', 'document-private-items', [CompletionResultType]::ParameterValue, 'Document private items')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to document')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to document')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Document all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, 'Exclude packages from the build')
        [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterValue, 'Alias for --workspace (deprecated)')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Document only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Document all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Document only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Document all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Document only the specified example')
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'fetch' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Fetch dependencies for the target triple')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'fix' {
        [CompletionResult]::new('--edition', 'edition', [CompletionResultType]::ParameterValue, 'Fix in preparation for the next edition')
        [CompletionResult]::new('--edition-idioms', 'edition-idioms', [CompletionResultType]::ParameterValue, 'Fix warnings to migrate to the idioms of an edition')
        [CompletionResult]::new('--broken-code', 'broken-code', [CompletionResultType]::ParameterValue, 'Fix code even if it already has compiler errors')
        [CompletionResult]::new('--allow-no-vcs', 'allow-no-vcs', [CompletionResultType]::ParameterValue, 'Fix code even if a VCS was not detected')
        [CompletionResult]::new('--allow-dirty', 'allow-dirty', [CompletionResultType]::ParameterValue, 'Fix code even if the working directory is dirty')
        [CompletionResult]::new('--allow-staged', 'allow-staged', [CompletionResultType]::ParameterValue, 'Fix code even if the working directory has staged changes')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package(s) to fix')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package(s) to fix')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Fix all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, 'Exclude packages from the fixes')
        [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterValue, 'Alias for --workspace (deprecated)')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Fix only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Fix all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Fix only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Fix all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Fix only the specified example')
        [CompletionResult]::new('--tests', 'tests', [CompletionResultType]::ParameterValue, 'Fix all test targets')
        [CompletionResult]::new('--test', 'test', [CompletionResultType]::ParameterValue, 'Fix only the specified test target')
        [CompletionResult]::new('--benches', 'benches', [CompletionResultType]::ParameterValue, 'Fix all bench targets')
        [CompletionResult]::new('--bench', 'bench', [CompletionResultType]::ParameterValue, 'Fix only the specified bench target')
        [CompletionResult]::new('--all-targets', 'all-targets', [CompletionResultType]::ParameterValue, 'Fix all targets (default)')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Fix artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Fix artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Fix for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'fmt' {
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'No output printed to stdout')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'No output printed to stdout')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output')
        [CompletionResult]::new('--version', 'version', [CompletionResultType]::ParameterValue, 'Print rustfmt version and exit')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Specify package to format')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Specify package to format')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Specify path to Cargo.toml')
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Specify message-format: short|json|human')
        [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterValue, 'Format all packages, and also their local path-based dependencies')
        [CompletionResult]::new('--check', 'check', [CompletionResultType]::ParameterValue, 'Run rustfmt in check mode')
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
      }
      'generate-lockfile' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'help' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'init' {
        [CompletionResult]::new('--vcs', 'vcs', [CompletionResultType]::ParameterValue, 'Initialize a new repository for the given version control system,')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Use a binary (application) template [default]')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, 'Use a library template')
        [CompletionResult]::new('--edition', 'edition', [CompletionResultType]::ParameterValue, 'Edition to set for the crate generated [possible values: 2015, 2018,')
        [CompletionResult]::new('--name', 'name', [CompletionResultType]::ParameterValue, 'Set the resulting package name, defaults to the directory name')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to use')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'install' {
        [CompletionResult]::new('--version', 'version', [CompletionResultType]::ParameterValue, 'Specify a version to install')
        [CompletionResult]::new('--index', 'index', [CompletionResultType]::ParameterValue, 'Registry index to install from')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to use')
        [CompletionResult]::new('--git', 'git', [CompletionResultType]::ParameterValue, 'Git URL to install the specified crate from')
        [CompletionResult]::new('--branch', 'branch', [CompletionResultType]::ParameterValue, 'Branch to use when installing from git')
        [CompletionResult]::new('--tag', 'tag', [CompletionResultType]::ParameterValue, 'Tag to use when installing from git')
        [CompletionResult]::new('--rev', 'rev', [CompletionResultType]::ParameterValue, 'Specific commit to use when installing from git')
        [CompletionResult]::new('--path', 'path', [CompletionResultType]::ParameterValue, 'Filesystem path to local crate to install from')
        [CompletionResult]::new('--root', 'root', [CompletionResultType]::ParameterValue, 'Directory to install packages into')
        [CompletionResult]::new('-f', 'f', [CompletionResultType]::ParameterValue, 'Force overwriting existing crates or binaries')
        [CompletionResult]::new('--force', 'force', [CompletionResultType]::ParameterValue, 'Force overwriting existing crates or binaries')
        [CompletionResult]::new('--no-track', 'no-track', [CompletionResultType]::ParameterValue, 'Do not save tracking information')
        [CompletionResult]::new('--list', 'list', [CompletionResultType]::ParameterValue, 'List all installed packages and their versions')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('--debug', 'debug', [CompletionResultType]::ParameterValue, "Build in debug mode (with the 'dev' profile) instead of release mode")
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Install only the specified binary')
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Install all binaries')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Install only the specified example')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Install all examples')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Install artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'locate-project' {
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Locate Cargo.toml of the workspace root')
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Output representation [possible values: json, plain]')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'login' {
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to use')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'logout' {
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to use')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'metadata' {
        [CompletionResult]::new('--filter-platform', 'filter-platform', [CompletionResultType]::ParameterValue, 'Only include resolve dependencies matching the given target-triple')
        [CompletionResult]::new('--no-deps', 'no-deps', [CompletionResultType]::ParameterValue, "Output information only about the workspace members and don't")
        [CompletionResult]::new('--format-version', 'format-version', [CompletionResultType]::ParameterValue, 'Format version [possible values: 1]')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'new' {
        [CompletionResult]::new('--vcs', 'vcs', [CompletionResultType]::ParameterValue, 'Initialize a new repository for the given version control system,')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Use a binary (application) template [default]')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, 'Use a library template')
        [CompletionResult]::new('--edition', 'edition', [CompletionResultType]::ParameterValue, 'Edition to set for the crate generated [possible values: 2015, 2018,')
        [CompletionResult]::new('--name', 'name', [CompletionResultType]::ParameterValue, 'Set the resulting package name, defaults to the directory name')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to use')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'owner' {
        [CompletionResult]::new('-a', 'a', [CompletionResultType]::ParameterValue, 'Name of a user or team to invite as an owner')
        [CompletionResult]::new('--add', 'add', [CompletionResultType]::ParameterValue, 'Name of a user or team to invite as an owner')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Name of a user or team to remove as an owner')
        [CompletionResult]::new('--remove', 'remove', [CompletionResultType]::ParameterValue, 'Name of a user or team to remove as an owner')
        [CompletionResult]::new('-l', 'l', [CompletionResultType]::ParameterValue, 'List owners of a crate')
        [CompletionResult]::new('--list', 'list', [CompletionResultType]::ParameterValue, 'List owners of a crate')
        [CompletionResult]::new('--index', 'index', [CompletionResultType]::ParameterValue, 'Registry index URL to modify owners for')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to modify owners for')
        [CompletionResult]::new('--token', 'token', [CompletionResultType]::ParameterValue, 'API token to use when authenticating')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'package' {
        [CompletionResult]::new('-l', 'l', [CompletionResultType]::ParameterValue, 'Print files included in a package without making one')
        [CompletionResult]::new('--list', 'list', [CompletionResultType]::ParameterValue, 'Print files included in a package without making one')
        [CompletionResult]::new('--no-verify', 'no-verify', [CompletionResultType]::ParameterValue, "Don't verify the contents by building them")
        [CompletionResult]::new('--no-metadata', 'no-metadata', [CompletionResultType]::ParameterValue, 'Ignore warnings about a lack of human-usable metadata')
        [CompletionResult]::new('--allow-dirty', 'allow-dirty', [CompletionResultType]::ParameterValue, 'Allow dirty working directories to be packaged')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package(s) to assemble')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package(s) to assemble')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Assemble all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, "Don't assemble specified packages")
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'pkgid' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Argument to get the package ID specifier for')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Argument to get the package ID specifier for')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'publish' {
        [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterValue, 'Perform all checks without uploading')
        [CompletionResult]::new('--dry-run', 'dry-run', [CompletionResultType]::ParameterValue, 'Perform all checks without uploading')
        [CompletionResult]::new('--index', 'index', [CompletionResultType]::ParameterValue, 'Registry index URL to upload the package to')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to upload the package to')
        [CompletionResult]::new('--token', 'token', [CompletionResultType]::ParameterValue, 'Token to use when uploading')
        [CompletionResult]::new('--no-verify', 'no-verify', [CompletionResultType]::ParameterValue, "Don't verify the contents by building them")
        [CompletionResult]::new('--allow-dirty', 'allow-dirty', [CompletionResultType]::ParameterValue, 'Allow dirty working directories to be packaged')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to publish')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to publish')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'read-manifest.txt' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'remove' {
        [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterValue, "Don't actually write the manifest")
        [CompletionResult]::new('--dry-run', 'dry-run', [CompletionResultType]::ParameterValue, "Don't actually write the manifest")
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--dev', 'dev', [CompletionResultType]::ParameterValue, 'Remove from dev-dependencies')
        [CompletionResult]::new('--build', 'build', [CompletionResultType]::ParameterValue, 'Remove from build-dependencies')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Remove from target-dependencies')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to remove from')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to remove from')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'report' {
        if ($commandAst.CommandElements.Count -le 3) {
          [CompletionResult]::new('future-incompatibilities', 'future-incompatibilities', [CompletionResultType]::ParameterValue, 'Reports any crates which will eventually stop compiling')
        }
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'report_future-incompatibilities' {
        switch ($prev) {
          '--color' {
            @('auto', 'always', 'never') | ForEach-Object { [CompletionResult]::new($_) }
          }
          '-Z' {
            [CompletionResult]::new('allow-features', 'allow-features', [CompletionResultType]::ParameterValue, 'Allow *only* the listed unstable features')
            [CompletionResult]::new('asymmetric-token', 'asymmetric-token', [CompletionResultType]::ParameterValue, 'Allows authenticating with asymmetric tokens')
            [CompletionResult]::new('avoid-dev-deps', 'avoid-dev-deps', [CompletionResultType]::ParameterValue, 'Avoid installing dev-dependencies if possible')
            [CompletionResult]::new('binary-dep-depinfo', 'binary-dep-depinfo', [CompletionResultType]::ParameterValue, 'Track changes to dependency artifacts')
            [CompletionResult]::new('bindeps', 'bindeps', [CompletionResultType]::ParameterValue, 'Allow Cargo packages to depend on bin, cdylib, and staticlib crates, and use the artifacts built by those crates')
            [CompletionResult]::new('build-std', 'build-std', [CompletionResultType]::ParameterValue, 'Enable Cargo to compile the standard library itself as part of a crate graph compilation')
            [CompletionResult]::new('build-std-features', 'build-std-features', [CompletionResultType]::ParameterValue, 'Configure features enabled for the standard library itself when building the standard library')
            [CompletionResult]::new('check-cfg', 'check-cfg', [CompletionResultType]::ParameterValue, 'Enable compile-time checking of `cfg` names/values/features')
            [CompletionResult]::new('codegen-backend', 'codegen-backend', [CompletionResultType]::ParameterValue, 'Enable the `codegen-backend` option in profiles in .cargo/config.toml file')
            [CompletionResult]::new('config-include', 'config-include', [CompletionResultType]::ParameterValue, 'Enable the `include` key in config files')
            [CompletionResult]::new('direct-minimal-versions', 'direct-minimal-versions', [CompletionResultType]::ParameterValue, 'Resolve minimal dependency versions instead of maximum (direct dependencies only)')
            [CompletionResult]::new('doctest-xcompile', 'doctest-xcompile', [CompletionResultType]::ParameterValue, 'Compile and run doctests for non-host target using runner config')
            [CompletionResult]::new('dual-proc-macros', 'dual-proc-macros', [CompletionResultType]::ParameterValue, 'Build proc-macros for both the host and the target')
            [CompletionResult]::new('gc', 'gc', [CompletionResultType]::ParameterValue, 'Track cache usage and "garbage collect" unused files')
            [CompletionResult]::new('git', 'git', [CompletionResultType]::ParameterValue, 'Enable support for shallow git fetch operations')
            [CompletionResult]::new('gitoxide', 'gitoxide', [CompletionResultType]::ParameterValue, 'Use gitoxide for the given git interactions, or all of them if no argument is given')
            [CompletionResult]::new('host-config', 'host-config', [CompletionResultType]::ParameterValue, 'Enable the `[host]` section in the .cargo/config.toml file')
            [CompletionResult]::new('lints', 'lints', [CompletionResultType]::ParameterValue, 'Pass `[lints]` to the linting tools')
            [CompletionResult]::new('minimal-versions', 'minimal-versions', [CompletionResultType]::ParameterValue, 'Resolve minimal dependency versions instead of maximum')
            [CompletionResult]::new('msrv-policy', 'msrv-policy', [CompletionResultType]::ParameterValue, 'Enable rust-version aware policy within cargo')
            [CompletionResult]::new('mtime-on-use', 'mtime-on-use', [CompletionResultType]::ParameterValue, 'Configure Cargo to update the mtime of used files')
            [CompletionResult]::new('no-index-update', 'no-index-update', [CompletionResultType]::ParameterValue, 'Do not update the registry index even if the cache is outdated')
            [CompletionResult]::new('panic-abort-tests', 'panic-abort-tests', [CompletionResultType]::ParameterValue, 'Enable support to run tests with -Cpanic=abort')
            [CompletionResult]::new('precise-pre-release', 'precise-pre-release', [CompletionResultType]::ParameterValue, 'Enable pre-release versions to be selected with `update --precise`')
            [CompletionResult]::new('profile-rustflags', 'profile-rustflags', [CompletionResultType]::ParameterValue, 'Enable the `rustflags` option in profiles in .cargo/config.toml file')
            [CompletionResult]::new('public-dependency', 'public-dependency', [CompletionResultType]::ParameterValue, "Respect a dependency's ``public`` field in Cargo.toml to control public/private dependencies")
            [CompletionResult]::new('publish-timeout', 'publish-timeout', [CompletionResultType]::ParameterValue, 'Enable the `publish.timeout` key in .cargo/config.toml file')
            [CompletionResult]::new('rustdoc-map', 'rustdoc-map', [CompletionResultType]::ParameterValue, 'Allow passing external documentation mappings to rustdoc')
            [CompletionResult]::new('rustdoc-scrape-examples', 'rustdoc-scrape-examples', [CompletionResultType]::ParameterValue, 'Allows Rustdoc to scrape code examples from reverse-dependencies')
            [CompletionResult]::new('script', 'script', [CompletionResultType]::ParameterValue, 'Enable support for single-file, `.rs` packages')
            [CompletionResult]::new('target-applies-to-host', 'target-applies-to-host', [CompletionResultType]::ParameterValue, 'Enable the `target-applies-to-host` key in the .cargo/config.toml file')
            [CompletionResult]::new('trim-paths', 'trim-paths', [CompletionResultType]::ParameterValue, 'Enable the `trim-paths` option in profiles')
            [CompletionResult]::new('unstable-options', 'unstable-options', [CompletionResultType]::ParameterValue, 'Allow the usage of unstable options')
          }
          default {
            [CompletionResult]::new('--id', 'id', [CompletionResultType]::ParameterValue, 'identifier of the report generated by a')
            [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very')
            [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very')
            [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
            [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
            [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
            [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
            [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, 'Unstable (nightly-only) flags to Cargo, see')
            [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
            [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
            [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to display a report for')
            [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to display a report for')
            [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
            [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
            [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
          }
        }
      }
      'rm' {
        [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterValue, "Don't actually write the manifest")
        [CompletionResult]::new('--dry-run', 'dry-run', [CompletionResultType]::ParameterValue, "Don't actually write the manifest")
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--dev', 'dev', [CompletionResultType]::ParameterValue, 'Remove from dev-dependencies')
        [CompletionResult]::new('--build', 'build', [CompletionResultType]::ParameterValue, 'Remove from build-dependencies')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Remove from target-dependencies')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to remove from')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to remove from')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      { $_ -eq 'r' -or $_ -eq 'run' } {
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package with the target to run')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package with the target to run')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Name of the bin target to run')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Name of the example target to run')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'rustc' {
        [CompletionResult]::new('--print', 'print', [CompletionResultType]::ParameterValue, 'Output compiler information without compiling')
        [CompletionResult]::new('--crate-type', 'crate-type', [CompletionResultType]::ParameterValue, 'Comma separated list of types of crates for the compiler to emit')
        [CompletionResult]::new('--future-incompat-report', 'future-incompat-report', [CompletionResultType]::ParameterValue, 'Outputs a future incompatibility report at the end of the build')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to build')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to build')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Build only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Build all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Build only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Build all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Build only the specified example')
        [CompletionResult]::new('--tests', 'tests', [CompletionResultType]::ParameterValue, 'Build all test targets')
        [CompletionResult]::new('--test', 'test', [CompletionResultType]::ParameterValue, 'Build only the specified test target')
        [CompletionResult]::new('--benches', 'benches', [CompletionResultType]::ParameterValue, 'Build all bench targets')
        [CompletionResult]::new('--bench', 'bench', [CompletionResultType]::ParameterValue, 'Build only the specified bench target')
        [CompletionResult]::new('--all-targets', 'all-targets', [CompletionResultType]::ParameterValue, 'Build all targets')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Target triple which compiles will be for')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'rustdoc' {
        [CompletionResult]::new('--open', 'open', [CompletionResultType]::ParameterValue, 'Opens the docs in a browser after the operation')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('--output-format', 'output-format', [CompletionResultType]::ParameterValue, 'The output type to write (unstable) [possible values: html, json]')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to document')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to document')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Build only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Build all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Build only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Build all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Build only the specified example')
        [CompletionResult]::new('--tests', 'tests', [CompletionResultType]::ParameterValue, 'Build all test targets')
        [CompletionResult]::new('--test', 'test', [CompletionResultType]::ParameterValue, 'Build only the specified test target')
        [CompletionResult]::new('--benches', 'benches', [CompletionResultType]::ParameterValue, 'Build all bench targets')
        [CompletionResult]::new('--bench', 'bench', [CompletionResultType]::ParameterValue, 'Build only the specified bench target')
        [CompletionResult]::new('--all-targets', 'all-targets', [CompletionResultType]::ParameterValue, 'Build all targets')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--keep-going', 'keep-going', [CompletionResultType]::ParameterValue, 'Do not abort the build as soon as there is an error')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings[=<FMTS>]', 'timings[=<FMTS>]', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, jso')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'search' {
        [CompletionResult]::new('--limit', 'limit', [CompletionResultType]::ParameterValue, 'Limit the number of results (default: 10, max: 100)')
        [CompletionResult]::new('--index', 'index', [CompletionResultType]::ParameterValue, 'Registry index URL to search packages in')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to search packages in')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      { $_ -eq 't' -or $_ -eq 'test' } {
        [CompletionResult]::new('--doc', 'doc', [CompletionResultType]::ParameterValue, "Test only this library's documentation")
        [CompletionResult]::new('--no-run', 'no-run', [CompletionResultType]::ParameterValue, "Compile, but don't run tests")
        [CompletionResult]::new('--no-fail-fast', 'no-fail-fast', [CompletionResultType]::ParameterValue, 'Run all tests regardless of failure')
        [CompletionResult]::new('--ignore-rust-version', 'ignore-rust-version', [CompletionResultType]::ParameterValue, "Ignore `rust-version` specification in packages")
        [CompletionResult]::new('--future-incompat-report', 'future-incompat-report', [CompletionResultType]::ParameterValue, 'Outputs a future incompatibility report at the end of the build')
        [CompletionResult]::new('--message-format', 'message-format', [CompletionResultType]::ParameterValue, 'Error format')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Display one character per test instead of one line')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Display one character per test instead of one line')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to run tests for')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to run tests for')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Test all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, 'Exclude packages from the test')
        [CompletionResult]::new('--all', 'all', [CompletionResultType]::ParameterValue, 'Alias for --workspace (deprecated)')
        [CompletionResult]::new('--lib', 'lib', [CompletionResultType]::ParameterValue, "Test only this package's library")
        [CompletionResult]::new('--bins', 'bins', [CompletionResultType]::ParameterValue, 'Test all binaries')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Test only the specified binary')
        [CompletionResult]::new('--examples', 'examples', [CompletionResultType]::ParameterValue, 'Test all examples')
        [CompletionResult]::new('--example', 'example', [CompletionResultType]::ParameterValue, 'Test only the specified example')
        [CompletionResult]::new('--tests', 'tests', [CompletionResultType]::ParameterValue, 'Test all test targets')
        [CompletionResult]::new('--test', 'test', [CompletionResultType]::ParameterValue, 'Test only the specified test target')
        [CompletionResult]::new('--benches', 'benches', [CompletionResultType]::ParameterValue, 'Test all bench targets')
        [CompletionResult]::new('--bench', 'bench', [CompletionResultType]::ParameterValue, 'Test only the specified bench target')
        [CompletionResult]::new('--all-targets', 'all-targets', [CompletionResultType]::ParameterValue, 'Test all targets (does not include doctests)')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterValue, 'Number of parallel jobs, defaults to # of CPUs.')
        [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--release', 'release', [CompletionResultType]::ParameterValue, 'Build artifacts in release mode, with optimizations')
        [CompletionResult]::new('--profile', 'profile', [CompletionResultType]::ParameterValue, 'Build artifacts with the specified profile')
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Build for the target triple')
        [CompletionResult]::new('--target-dir', 'target-dir', [CompletionResultType]::ParameterValue, 'Directory for all generated artifacts')
        [CompletionResult]::new('--unit-graph', 'unit-graph', [CompletionResultType]::ParameterValue, 'Output build graph in JSON (unstable)')
        [CompletionResult]::new('--timings', 'timings', [CompletionResultType]::ParameterValue, 'Timing output formats (unstable) (comma separated): html, json')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'tree' {
        [CompletionResult]::new('-e', 'e', [CompletionResultType]::ParameterValue, 'The kinds of dependencies to display (features, normal, build, dev, all,')
        [CompletionResult]::new('--edges', 'edges', [CompletionResultType]::ParameterValue, 'The kinds of dependencies to display (features, normal, build, dev, all,')
        [CompletionResult]::new('-i', 'i', [CompletionResultType]::ParameterValue, 'Invert the tree direction and focus on the given package')
        [CompletionResult]::new('--invert', 'invert', [CompletionResultType]::ParameterValue, 'Invert the tree direction and focus on the given package')
        [CompletionResult]::new('--prune', 'prune', [CompletionResultType]::ParameterValue, 'Prune the given package from the display of the dependency tree')
        [CompletionResult]::new('--depth', 'depth', [CompletionResultType]::ParameterValue, 'Maximum display depth of the dependency tree')
        [CompletionResult]::new('--prefix', 'prefix', [CompletionResultType]::ParameterValue, 'Change the prefix (indentation) of how each entry is displayed [default:')
        [CompletionResult]::new('--no-dedupe', 'no-dedupe', [CompletionResultType]::ParameterValue, 'Do not de-duplicate (repeats all shared dependencies)')
        [CompletionResult]::new('-d', 'd', [CompletionResultType]::ParameterValue, 'Show only dependencies which come in multiple versions (implies -i)')
        [CompletionResult]::new('--duplicates', 'duplicates', [CompletionResultType]::ParameterValue, 'Show only dependencies which come in multiple versions (implies -i)')
        [CompletionResult]::new('--charset', 'charset', [CompletionResultType]::ParameterValue, 'Character set to use in output [possible values: utf8, ascii]')
        [CompletionResult]::new('-f', 'f', [CompletionResultType]::ParameterValue, 'Format string used for printing dependencies [default: {p}]')
        [CompletionResult]::new('--format', 'format', [CompletionResultType]::ParameterValue, 'Format string used for printing dependencies [default: {p}]')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, ' Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, ' Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to be used as the root of the tree')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to be used as the root of the tree')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Display the tree for all packages in the workspace')
        [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterValue, 'Exclude specific workspace members')
        [CompletionResult]::new('-F', 'F', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--features', 'features', [CompletionResultType]::ParameterValue, 'Space or comma separated list of features to activate')
        [CompletionResult]::new('--all-features', 'all-features', [CompletionResultType]::ParameterValue, 'Activate all available features')
        [CompletionResult]::new('--no-default-features', 'no-default-features', [CompletionResultType]::ParameterValue, "Do not activate the `default` feature")
        [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterValue, 'Filter dependencies matching the given target-triple (default host')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'uninstall' {
        [CompletionResult]::new('--root', 'root', [CompletionResultType]::ParameterValue, 'Directory to uninstall packages from')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterValue, 'Package to uninstall')
        [CompletionResult]::new('--package', 'package', [CompletionResultType]::ParameterValue, 'Package to uninstall')
        [CompletionResult]::new('--bin', 'bin', [CompletionResultType]::ParameterValue, 'Only uninstall the binary NAME')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'update' {
        [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterValue, "Don't actually write the lockfile")
        [CompletionResult]::new('--dry-run', 'dry-run', [CompletionResultType]::ParameterValue, "Don't actually write the lockfile")
        [CompletionResult]::new('--recursive', 'recursive', [CompletionResultType]::ParameterValue, 'Force updating all dependencies of [SPEC]... as well')
        [CompletionResult]::new('--precise', 'precise', [CompletionResultType]::ParameterValue, 'Update [SPEC] to exactly PRECISE')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('-w', 'w', [CompletionResultType]::ParameterValue, 'Only update the workspace packages')
        [CompletionResult]::new('--workspace', 'workspace', [CompletionResultType]::ParameterValue, 'Only update the workspace packages')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'vendor' {
        [CompletionResult]::new('--no-delete', 'no-delete', [CompletionResultType]::ParameterValue, "Don't delete older crates in the vendor directory")
        [CompletionResult]::new('-s', 's', [CompletionResultType]::ParameterValue, "Additional `Cargo.toml` to sync and vendor")
        [CompletionResult]::new('--sync', 'sync', [CompletionResultType]::ParameterValue, "Additional `Cargo.toml` to sync and vendor")
        [CompletionResult]::new('--respect-source-config', 'respect-source-config', [CompletionResultType]::ParameterValue, 'Respect `[source]` config in `.cargo/config`')
        [CompletionResult]::new('--versioned-dirs', 'versioned-dirs', [CompletionResultType]::ParameterValue, 'Always include version in subdir name')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'verify-project.txt' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--manifest-path', 'manifest-path', [CompletionResultType]::ParameterValue, 'Path to Cargo.toml')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'version' {
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      'yank' {
        [CompletionResult]::new('--version', 'version', [CompletionResultType]::ParameterValue, 'The version to yank or un-yank')
        [CompletionResult]::new('--undo', 'undo', [CompletionResultType]::ParameterValue, 'Undo a yank, putting a version back into the index')
        [CompletionResult]::new('--index', 'index', [CompletionResultType]::ParameterValue, 'Registry index URL to yank from')
        [CompletionResult]::new('--registry', 'registry', [CompletionResultType]::ParameterValue, 'Registry to yank from')
        [CompletionResult]::new('--token', 'token', [CompletionResultType]::ParameterValue, 'API token to use when authenticating')
        [CompletionResult]::new('-v', 'v', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('--verbose', 'verbose', [CompletionResultType]::ParameterValue, 'Use verbose output (-vv very verbose/build.rs output)')
        [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterValue, 'Do not print cargo log messages')
        [CompletionResult]::new('--color', 'color', [CompletionResultType]::ParameterValue, 'Coloring: auto, always, never')
        [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterValue, 'Override a configuration value')
        [CompletionResult]::new('-Z', 'Z', [CompletionResultType]::ParameterValue, "Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details")
        [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterValue, 'Print help')
        [CompletionResult]::new('--frozen', 'frozen', [CompletionResultType]::ParameterValue, 'Require Cargo.lock and cache are up to date')
        [CompletionResult]::new('--locked', 'locked', [CompletionResultType]::ParameterValue, 'Require Cargo.lock is up to date')
        [CompletionResult]::new('--offline', 'offline', [CompletionResultType]::ParameterValue, 'Run without accessing the network')
      }
      Default {
        if ($wordToComplete[0] -ne '-') {
          [CompletionResult]::new('add', 'add', [CompletionResultType]::ParameterValue, 'Add dependencies to a Cargo.toml manifest file')
          [CompletionResult]::new('b', 'b', [CompletionResultType]::ParameterValue, 'alias: build')
          [CompletionResult]::new('bench', 'bench', [CompletionResultType]::ParameterValue, 'Execute all benchmarks of a local package')
          [CompletionResult]::new('build', 'build', [CompletionResultType]::ParameterValue, 'Compile a local package and all of its dependencies')
          [CompletionResult]::new('c', 'c', [CompletionResultType]::ParameterValue, 'alias: check')
          [CompletionResult]::new('check', 'check', [CompletionResultType]::ParameterValue, 'Check a local package and all of its dependencies for errors')
          [CompletionResult]::new('clean', 'clean', [CompletionResultType]::ParameterValue, 'Remove artifacts that cargo has generated in the past')
          [CompletionResult]::new('clippy', 'clippy', [CompletionResultType]::ParameterValue, 'Checks a package to catch common mistakes and improve your Rust code.')
          [CompletionResult]::new('config', 'config', [CompletionResultType]::ParameterValue, 'Inspect configuration values')
          [CompletionResult]::new('d', 'd', [CompletionResultType]::ParameterValue, 'alias: doc')
          [CompletionResult]::new('doc', 'doc', [CompletionResultType]::ParameterValue, "Build a package's documentation")
          [CompletionResult]::new('fetch', 'fetch', [CompletionResultType]::ParameterValue, 'Fetch dependencies of a package from the network')
          [CompletionResult]::new('fix', 'fix', [CompletionResultType]::ParameterValue, 'Automatically fix lint warnings reported by rustc')
          [CompletionResult]::new('fmt', 'fmt', [CompletionResultType]::ParameterValue, 'Formats all bin and lib files of the current crate using rustfmt.')
          [CompletionResult]::new('generate-lockfile', 'generate-lockfile', [CompletionResultType]::ParameterValue, 'Generate the lockfile for a package')
          [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Displays help for a cargo subcommand')
          [CompletionResult]::new('init', 'init', [CompletionResultType]::ParameterValue, 'Create a new cargo package in an existing directory')
          [CompletionResult]::new('install', 'install', [CompletionResultType]::ParameterValue, 'Install a Rust binary')
          [CompletionResult]::new('locate-project', 'locate-project', [CompletionResultType]::ParameterValue, "Print a JSON representation of a Cargo.toml file's location")
          [CompletionResult]::new('login', 'login', [CompletionResultType]::ParameterValue, 'Log in to a registry.')
          [CompletionResult]::new('logout', 'logout', [CompletionResultType]::ParameterValue, 'Remove an API token from the registry locally')
          [CompletionResult]::new('metadata', 'metadata', [CompletionResultType]::ParameterValue, 'Output the resolved dependencies of a package, the concrete used versions including overrides, in machine-readable format')
          [CompletionResult]::new('miri', 'miri', [CompletionResultType]::ParameterValue, 'Run Miri to check that a package is memory safe')
          [CompletionResult]::new('new', 'new', [CompletionResultType]::ParameterValue, 'Create a new cargo package at <path>')
          [CompletionResult]::new('owner', 'owner', [CompletionResultType]::ParameterValue, 'Manage the owners of a crate on the registry')
          [CompletionResult]::new('package', 'package', [CompletionResultType]::ParameterValue, 'Assemble the local package into a distributable tarball')
          [CompletionResult]::new('pkgid', 'pkgid', [CompletionResultType]::ParameterValue, 'Print a fully qualified package specification')
          [CompletionResult]::new('publish', 'publish', [CompletionResultType]::ParameterValue, 'Upload a package to the registry')
          [CompletionResult]::new('r', 'r', [CompletionResultType]::ParameterValue, 'alias: run')
          [CompletionResult]::new('read-manifest', 'read-manifest', [CompletionResultType]::ParameterValue, 'Print a JSON representation of a Cargo.toml manifest.')
          [CompletionResult]::new('remove', 'remove', [CompletionResultType]::ParameterValue, 'Remove dependencies from a Cargo.toml manifest file')
          [CompletionResult]::new('report', 'report', [CompletionResultType]::ParameterValue, 'Generate and display various kinds of reports')
          [CompletionResult]::new('rm', 'rm', [CompletionResultType]::ParameterValue, 'alias: remove')
          [CompletionResult]::new('run', 'run', [CompletionResultType]::ParameterValue, 'Run a binary or example of the local package')
          [CompletionResult]::new('rustc', 'rustc', [CompletionResultType]::ParameterValue, 'Compile a package, and pass extra options to the compiler')
          [CompletionResult]::new('rustdoc', 'rustdoc', [CompletionResultType]::ParameterValue, "Build a package's documentation, using specified custom flags.")
          [CompletionResult]::new('search', 'search', [CompletionResultType]::ParameterValue, 'Search packages in the registry. Default registry is crates.io')
          [CompletionResult]::new('t', 't', [CompletionResultType]::ParameterValue, 'alias: test')
          [CompletionResult]::new('test', 'test', [CompletionResultType]::ParameterValue, 'Execute all unit and integration tests and build examples of a local package')
          [CompletionResult]::new('tree', 'tree', [CompletionResultType]::ParameterValue, 'Display a tree visualization of a dependency graph')
          [CompletionResult]::new('uninstall', 'uninstall', [CompletionResultType]::ParameterValue, 'Remove a Rust binary')
          [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Update dependencies as recorded in the local lock file')
          [CompletionResult]::new('vendor', 'vendor', [CompletionResultType]::ParameterValue, 'Vendor all dependencies for a project locally')
          [CompletionResult]::new('verify-project', 'verify-project', [CompletionResultType]::ParameterValue, 'Check correctness of crate manifest')
          [CompletionResult]::new('version', 'version', [CompletionResultType]::ParameterValue, 'Show version information')
          [CompletionResult]::new('yank', 'yank', [CompletionResultType]::ParameterValue, 'Remove a pushed crate from the index')
        }
      }
    }) | Where-Object { $_.CompletionText -like "$wordToComplete*" }
}
