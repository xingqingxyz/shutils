Register-ArgumentCompleter -Native -CommandName node -ScriptBlock {
  param([string]$wordToComplete, [System.Management.Automation.Language.CommandAst]$commandAst, [int]$cursorPosition)
  $cursorPosition -= $wordToComplete.Length
  foreach ($i in $commandAst.CommandElements) {
    if ($i.Extent.StartOffset -ge $cursorPosition) {
      break
    }
    $prev = $i
  }
  $prev = $prev -is [System.Management.Automation.Language.StringConstantExpressionAst] ? $prev.Value : $prev.ToString()
  @(if ($wordToComplete.StartsWith('-')) {
      @('--abort-on-uncaught-exception', '--allow-addons', '--allow-child-process', '--allow-fs-read', '--allow-fs-write', '--allow-worker', '--build-snapshot', '--build-snapshot-config', '-c', '--check', '--completion-bash', '-C', '--conditions', '--cpu-prof', '--cpu-prof-dir', '--cpu-prof-interval', '--cpu-prof-name', '--diagnostic-dir', '--disable-proto', '--disable-warning', '--disallow-code-generation-from-strings', '--dns-result-order', '--enable-etw-stack-walking', '--enable-fips', '--enable-source-maps', '--env-file', '-e', '--eval', '--experimental-default-type', '--experimental-detect-module', '--experimental-import-meta-resolve', '--loader', '--experimental-network-imports', '--experimental-permission', '--experimental-policy', '--experimental-sea-config', '--experimental-test-coverage', '--experimental-vm-modules', '--experimental-wasm-modules', '--force-context-aware', '--force-fips', '--force-node-api-uncaught-exceptions-policy', '--frozen-intrinsics', '--heap-prof', '--heap-prof-dir', '--heap-prof-interval', '--heap-prof', '--heap-prof-name', '--heapsnapshot-near-heap-limit', '--heapsnapshot-signal', '-h', '--help', '--huge-max-old-generation-size', '--icu-data-dir', '--import', '--input-type', '--insecure-http-parser', '--inspect', '--inspect-brk', '--debug-port', '--inspect-publish-uid', '-i', '--interactive', '--interpreted-frames-native-stack', '--jitless', '--max-http-header-size', '--network-family-autoselection-attempt-timeout', '--no-addons', '--no-deprecation', '--no-experimental-fetch', '--no-experimental-global-customevent', '--no-experimental-global-webcrypto', '--no-experimental-repl-await', '--no-experimental-websocket', '--no-extra-info-on-fatal-exception', '--no-force-async-hooks-checks', '--no-global-search-paths', '--enable-network-family-autoselection', '--no-warnings', '--node-memory-debug', '--openssl-config', '--openssl-legacy-provider', '--openssl-shared-config', '--pending-deprecation', '--policy-integrity', '--preserve-symlinks', '--preserve-symlinks-main', '-p', '--print', '--prof', '--prof-process', '--redirect-warnings', '--report-compact', '--report-directory', '--report-exclude-network', '--report-filename', '--report-on-fatalerror', '--report-on-signal', '--report-signal', '--report-uncaught-exception', '-r', '--require', '--secure-heap', '--secure-heap-min', '--snapshot-blob', '--test', '--test-concurrency', '--test-force-exit', '--test-name-pattern', '--test-only', '--test-reporter', '--test-reporter-destination', '--test-shard', '--test-timeout', '--throw-deprecation', '--title', '--tls-cipher-list', '--tls-keylog', '--tls-max-v1', '--tls-max-v1', '--tls-min-v1', '--tls-min-v1', '--tls-min-v1', '--tls-min-v1', '--trace-atomics-wait', '--trace-deprecation', '--trace-event-categories', '--trace-event-file-pattern', '--trace-exit', '--trace-promises', '--trace-sigint', '--trace-sync-io', '--trace-tls', '--trace-uncaught', '--trace-warnings', '--track-heap-objects', '--unhandled-rejections', '--use-bundled-ca', '--use-largepages', '--use-openssl-ca', '--v8-options', '--v8-pool-size', '-v', '--version', '--watch', '--watch-path', '--watch-preserve-output', '--zero-fill-buffers')
    }
    elseif ($prev -eq '--run') {
      (packageJSON).scripts.Keys
    }).Where{ $_ -like "$wordToComplete*" }
}
